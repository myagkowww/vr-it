import "./questions.css";
import React, { useState } from "react";
import { useForm } from "react-hook-form";
import axios from "axios";
import InputMask from 'react-input-mask';

type FormData = {
    name: string;
    phone: string;
    email: string;
    subject: string;
    message: string;
    files: FileList;
};
const Questions = () => {
    const { register, handleSubmit, formState: { errors }, reset } = useForm<FormData>();
    const [selectedFiles, setSelectedFiles] = useState<File[]>([]);
    const token = process.env.REACT_APP_TELEGRAM_TOKEN;
    const onSubmit = async (data: FormData) => {
        const formData = new FormData();
        formData.append("–ò–º—è", data.name);
        formData.append("–¢–µ–ª–µ—Ñ–æ–Ω", data.phone);
        formData.append("e-mail", data.email);
        formData.append("–¢–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è", data.subject);
        formData.append("–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è", data.message);
        for (let i = 0; i < data.files.length; i++) {
            formData.append("files", data.files[i]);
        }
        try {
            await axios.post(`https://api.telegram.org/bot${token}/sendMessage`, {
                chat_id: "-4227583515",
                text: `üíª –ó–∞—è–≤–∫–∞ –Ω–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É:\n–ò–º—è: ${data.name}\n–¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}\ne-mail: ${data.email}\n–¢–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è: ${data.subject}\n–¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è: ${data.message}`
            });

            for (let i = 0; i < selectedFiles.length; i++) {
                const fileData = new FormData();
                fileData.append("chat_id", "-4227583515");
                fileData.append("document", selectedFiles[i]);
                await axios.post(`https://api.telegram.org/bot${token}/sendDocument`, fileData);
            }

            reset();
            setSelectedFiles([]);
            alert("–ó–∞—è–≤–∫–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
        } catch (error) {
            console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:", error);
            alert("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è!");
        }
    };
    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {
        if (e.target.files) {
            const files = Array.from(e.target.files);
            const validTypes = ["image/jpeg", "image/png", "application/msword", "application/vnd.ms-excel", "application/pdf"];
            const maxSize = 24 * 1024 * 1024; // 24 MB in bytes
            let totalSize = 0;
            const validFiles = files.filter(file => {
                totalSize += file.size;
                return validTypes.includes(file.type) && totalSize <= maxSize;
            });
            if (validFiles.length > 3) {
                alert("–ú–∞–∫—Å–∏–º—É–º 3 —Ñ–∞–π–ª–∞.");
                setSelectedFiles(validFiles.slice(0, 3));
            } else {
                setSelectedFiles(validFiles);
            }
        }
    };
    const handleTelegramClick = () => {
        window.open("https://t.me/ooo_vebrazrabotka", "_blank");
    };
    const handlePhoneClick = () => {
        window.location.href = "tel:+79956683584";
    };
    return (
        <div className="questions-block">
            <h2 className="block-title" id='questions'>–û–°–¢–ê–õ–ò–°–¨ –í–û–ü–†–û–°–´?</h2>
            <p className="consultation-title">–ó–∞–∫–∞–∂–∏—Ç–µ <b style={{ color: "#5CC3FD" }}>–±–µ—Å–ø–ª–∞—Ç–Ω—É—é</b> –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é!</p>
            <p className="consultation-text" >
                –ü—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä—É–µ–º –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã—Ö
                <b style={{ color: "#5CC3FD" }}> –≤–µ–±-—Å–µ—Ä–≤–∏—Å–æ–≤, –º–æ–±–∏–ª—å–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, ERP/CRM –¥–ª—è –≤–∞—à–µ–≥–æ –±–∏–∑–Ω–µ—Å–∞</b>
                , —Å—Ä–∞–∑—É, –Ω–∞ –ø–µ—Ä–≤–æ–º —Å–æ–∑–≤–æ–Ω–µ.
                <p>–ë–µ—Å–ø–ª–∞—Ç–Ω–æ –∏ –±–µ–∑ –æ–±—è–∑–∞—Ç–µ–ª—å—Å—Ç–≤.</p>
            </p>
            <form onSubmit={handleSubmit(onSubmit)} className="contact-form">
                <input className="form-input" placeholder="–ö–∞–∫ –∫ –≤–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è?" {...register("name", { required: true })} />
                {errors.name && <span className="error-message">–£–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è</span>}
                <InputMask className="form-input" mask="+7 (999) 999-99-99" placeholder="+7 (000) 000-00-00" id="phone-number" {...register("phone", { required: true, pattern: /^\+7 \(\d{3}\) \d{3}-\d{2}-\d{2}$/ })} />
                {errors.phone && <span className="error-message">–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</span>}
                <input
                    className="form-input"
                    placeholder="–í–∞—à–∞ –ø–æ—á—Ç–∞"
                    type="email"
                    {...register("email", { required: true })}
                />
                {errors.email && <span className="error-message">–£–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã</span>}
                <input
                    className="form-input"
                    placeholder="–¢–µ–º–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è"
                    {...register("subject", { required: true })}
                />
                {errors.subject && <span className="error-message">–£–∫–∞–∂–∏—Ç–µ —Ç–µ–º—É –≤–∞—à–µ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è</span>}
                <textarea
                    className="form-input message"
                    placeholder="–°–æ–æ–±—â–µ–Ω–∏–µ"
                    maxLength={500}
                    {...register("message", { required: true })}
                ></textarea>
                {errors.message && <span className="error-message">–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ –≤–∞—à–µ–π –∏–¥–µ–µ –º–∏–Ω–∏–º—É–º –≤ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö</span>}
                <p className="ps-title">**–û —á–µ–º –ø–∏—Å–∞—Ç—å –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏</p>
                <p className="ps-text">–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ, —á–µ–º –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –≤–∞—à–∞ –∫–æ–º–ø–∞–Ω–∏—è, –∫–∞–∫–∏–µ –∑–∞–¥–∞—á–∏ –¥–æ–ª–∂–µ–Ω —Ä–µ—à–∞—Ç—å —Ü–∏—Ñ—Ä–æ–≤–æ–π –ø—Ä–æ–¥—É–∫—Ç, –Ω–∞ –∫–∞–∫–∏–µ —Å—Ä–æ–∫–∏ –∏ –±—é–¥–∂–µ—Ç —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç–µ</p>
                <div className="file-input-wrapper">
                    <input
                        type="file"
                        className="file-input"
                        id="file-input"
                        {...register("files")}
                        multiple
                        onChange={handleFileChange}
                    />
                    <label htmlFor="file-input" className="file-input-label">–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Ñ–∞–π–ª</label>
                    <div className="selected-files">
                        {selectedFiles.map((file, index) => (
                            <div key={index} className="file-name">{file.name}</div>
                        ))}
                    </div>
                </div>
                <button type="submit" className="submit-button">
                    <p>–û—Ç–ø—Ä–∞–≤–∏—Ç—å</p>
                    <img src='/Pictures/arrow-diag.svg' alt="Arrow"/>
                {/*    ../public/Pictures/arrow-diag.svg*/}
                </button>
                <p className="personal-data">
                    –ü—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–û—Ç–ø—Ä–∞–≤–∏—Ç—å", —è –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É <a href="https://vk.com/e_myagkov">–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.</a>
                </p>
            </form>
            <p className="consultation-title">
                –í—ã –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å
                <b style={{ color: "#5CC3FD" }}> –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å </b>
                –≤ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä–µ –∏–ª–∏ <b style={{ color: "#5CC3FD" }}> –ø–æ —Ç–µ–ª–µ—Ñ–æ–Ω—É</b>
            </p>
            <div className="connection">
                <div className="connection-tg" onClick={handleTelegramClick}>
                    –°–≤—è–∑–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ <b style={{ color: "#5CC3FD" }}>Telegram</b>
                </div>
                <div className="connection-phone" onClick={handlePhoneClick}>
                    <p className="phone">+7 (995) 668-35-84</p>
                    <p className="callback">–ó–∞–∫–∞–∑–∞—Ç—å <b style={{ color: "#5CC3FD" }}>–æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫</b></p>
                </div>
            </div>
        </div>
    );
};

export default Questions;
